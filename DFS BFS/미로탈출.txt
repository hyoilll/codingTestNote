n, m = map(int, input().split())

Graph = []
for _ in range(n):
  Graph.append(list(map(int, input())))

# 방향벡터
dx = [0, 0, 1, -1]
dy = [1, -1, 0, 0]

from collections import deque
def bfs(x, y):
  q = deque()
  q.append([x, y])

  while q:
    x, y = q.popleft()

    for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]

      #index out
      if nx >= n or nx < 0 or ny >= m or ny < 0:
        continue

      if Graph[nx][ny] == 1:
        Graph[nx][ny] = Graph[x][y] + 1
        q.append([nx, ny])

bfs(0, 0)

print(Graph[n - 1][m - 1])