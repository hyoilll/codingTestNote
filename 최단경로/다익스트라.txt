import heapq
# 다익스트라 알고리즘은 입력 값이 많기 때문에 빠른 입력으로 하는게 좋음
import sys
input = sys.stdin.readline

INF = int(1e9)

# 노드 개수, 간선 개수, 출발 노드
n, m, k = map(int, input().split())

# 간선
Graph = [[] for _ in range(n + 1)]

for _ in range(m):
  startVertex, endVertex, weight = map(int, input().split())
  Graph[startVertex].append([endVertex, weight])

# 거리
distance = [INF] * (n + 1)
# 출발 노드는 거리 0
distance[k] = 0

def dijkstra():
  q = []
  heapq.heappush(q, [0, k])

  while q:
    w, v = heapq.heappop(q)
    
    for edge in Graph[v]:
      cost = w + edge[1]

      if cost < distance[edge[0]]:
        heapq.heappush(q, [cost, edge[0]]) # [거리, 노드]
        distance[edge[0]] = cost
        
dijkstra()

for i in range(1, len(distance)):
  if distance[i] == INF:
    print('INFINITY')
  else:
    print(distance[i])