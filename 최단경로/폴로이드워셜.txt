INF = int(1e9)

# 노드, 간선
n, m = map(int, input().split())

Graph = [[INF] * (n + 1) for _ in range(n + 1)]

# 자기 자신으로 가는 것은 0으로 초기화
for i in range(1, n + 1):
  for j in range(1, n + 1):
    if i == j:
      Graph[i][j] = 0

# 각 간선에 대한 정보를 입력받아, 그 값으로 초기화
for _ in range(m):
  startVertex, endVertex, weight = map(int, input().split())
  Graph[startVertex][endVertex] = weight

# 점화식에 따라 플로이드 워셜 알고리즘 수행
for i in range(1, n + 1):
  for j in range(1, n + 1):
    for k in range(1, n + 1):
      Graph[j][k] = min(Graph[j][k], Graph[j][i] + Graph[i][k])

# 출력
for i in range(1, n + 1):
  for j in range(1, n + 1):
    if Graph[i][j] == INF:
      print('INFINITY')
    else:
      print(Graph[i][j], end = ' ')
  print()