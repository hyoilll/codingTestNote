n, m = map(int, input().split())


def dfs(startVertex, endVertex, visited):
  visited[startVertex] = True
  if startVertex == endVertex:
    return 'yes'

  result = ''
  for i in Graph[startVertex]:
    if visited[i] == False:
      visited[i] = True
      result = dfs(i, endVertex, visited)
      if result == 'yes':
        return result
  return result
Graph = [[] for _ in range(n + 1)]
for _ in range(m):
  query, a, b = map(int, input().split())
  visited = [False] * (n + 1)
  # 친구 연결
  if query == 0:
    # 양방향 그래프
    Graph[a].append(b)
    Graph[b].append(a)
  # 친구 확인
  else: # query == 1
    result = dfs(a, b, visited)
    if result == 'yes':
      print('yes')
    else:
      print('no')